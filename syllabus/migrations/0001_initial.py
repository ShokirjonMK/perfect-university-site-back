# Generated by Django 3.1.1 on 2023-08-16 17:34

import ckeditor_uploader.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('admin_panel', '0140_delete_externalimage'),
    ]

    operations = [
        migrations.CreateModel(
            name='CourseLesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Kiritilgan sana')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name="O'zgartirilgan sana")),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('lesson_goals', models.TextField(verbose_name='Lecture goals')),
                ('order', models.IntegerField(verbose_name='Order')),
            ],
            options={
                'verbose_name': 'Course lesson',
                'verbose_name_plural': 'Course lessons',
            },
        ),
        migrations.CreateModel(
            name='CourseSyllabus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Kiritilgan sana')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name="O'zgartirilgan sana")),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
            ],
            options={
                'verbose_name': 'Course syllabus',
                'verbose_name_plural': 'Course syllabuses',
            },
        ),
        migrations.CreateModel(
            name='CourseSyllabusTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Kiritilgan sana')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name="O'zgartirilgan sana")),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('course_syllabus', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='course_syllabus_test', to='syllabus.coursesyllabus')),
            ],
            options={
                'verbose_name': 'Course syllabus test',
                'verbose_name_plural': 'Course syllabus tests',
            },
        ),
        migrations.CreateModel(
            name='CourseYear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Kiritilgan sana')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name="O'zgartirilgan sana")),
                ('year', models.IntegerField(unique=True, verbose_name='Year')),
            ],
            options={
                'verbose_name': 'Course year',
                'verbose_name_plural': 'Course years',
            },
        ),
        migrations.CreateModel(
            name='SyllabusLanguage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Kiritilgan sana')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name="O'zgartirilgan sana")),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('language_code', models.CharField(max_length=10, verbose_name='Language code')),
            ],
            options={
                'verbose_name': 'Syllabus language',
                'verbose_name_plural': 'Syllabus languages',
            },
        ),
        migrations.CreateModel(
            name='TestQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Kiritilgan sana')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name="O'zgartirilgan sana")),
                ('question', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Question')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_questions', to='syllabus.coursesyllabustest')),
            ],
            options={
                'verbose_name': 'Test question',
                'verbose_name_plural': 'Test questions',
            },
        ),
        migrations.CreateModel(
            name='TestAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Kiritilgan sana')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name="O'zgartirilgan sana")),
                ('answer', models.CharField(max_length=255, verbose_name='Answer')),
                ('is_correct', models.BooleanField(verbose_name='Is correct')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_answers', to='syllabus.testquestion')),
            ],
            options={
                'verbose_name': 'Test answer',
                'verbose_name_plural': 'Test answers',
            },
        ),
        migrations.CreateModel(
            name='Syllabus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Kiritilgan sana')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name="O'zgartirilgan sana")),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='syllabuses', to='admin_panel.department')),
            ],
            options={
                'verbose_name': 'Syllabus',
                'verbose_name_plural': 'Syllabuses',
            },
        ),
        migrations.CreateModel(
            name='CourseSyllabusTextSection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Kiritilgan sana')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name="O'zgartirilgan sana")),
                ('type', models.CharField(choices=[('1_science_description', '1. Science description'), ('2_purpose_of_science', '2. The Purpose of science'), ('3_learning_outcomes', '3. Learning outcomes'), ('4_teaching_methods', '4. Teaching methods'), ('5_assessment_methods', '5. Student Assessment methods'), ('6_academic_requirements', '6. Academic requirements'), ('7_independent_study', '7. Independent study and Independent work')], max_length=255, verbose_name='Type')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('text', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Text')),
                ('course_syllabus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_syllabus_text_sections', to='syllabus.coursesyllabus', verbose_name='CourseSyllabus')),
            ],
            options={
                'verbose_name': 'Course syllabus text section',
                'verbose_name_plural': 'Course syllabus text sections',
            },
        ),
        migrations.CreateModel(
            name='CourseSyllabusInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Kiritilgan sana')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name="O'zgartirilgan sana")),
                ('type', models.CharField(choices=[('information_about_science', 'Information about science'), ('location_of_science_classes', 'Location of science classes'), ('information_about_teacher', 'Information about teacher')], max_length=255, verbose_name='Type')),
                ('text', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Text')),
                ('course_syllabus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_syllabus_informations', to='syllabus.coursesyllabus')),
            ],
            options={
                'verbose_name': 'Course syllabus information',
                'verbose_name_plural': 'Course syllabus information',
            },
        ),
        migrations.AddField(
            model_name='coursesyllabus',
            name='language',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_syllabuses', to='syllabus.syllabuslanguage'),
        ),
        migrations.AddField(
            model_name='coursesyllabus',
            name='syllabus',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_syllabuses', to='syllabus.syllabus'),
        ),
        migrations.AddField(
            model_name='coursesyllabus',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_syllabuses', to='admin_panel.customuser'),
        ),
        migrations.AddField(
            model_name='coursesyllabus',
            name='year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_syllabuses', to='syllabus.courseyear'),
        ),
        migrations.CreateModel(
            name='CourseLessonResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Kiritilgan sana')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name="O'zgartirilgan sana")),
                ('type', models.CharField(choices=[('video', 'Video'), ('file', 'File'), ('url', 'URL')], max_length=255, verbose_name='Type')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('file_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='File name')),
                ('file', models.FileField(blank=True, null=True, upload_to='course_lesson_videos', verbose_name='File')),
                ('file_size', models.IntegerField(default=0, verbose_name='File size')),
                ('order', models.IntegerField(verbose_name='Order')),
                ('course_lesson', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='course_lesson_videos', to='syllabus.courselesson', verbose_name='Course lesson')),
                ('course_syllabus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_lesson_videos', to='syllabus.coursesyllabus', verbose_name='Course syllabus')),
            ],
            options={
                'verbose_name': 'Course lesson video',
                'verbose_name_plural': 'Course lesson videos',
            },
        ),
        migrations.CreateModel(
            name='CourseLessonHour',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Kiritilgan sana')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name="O'zgartirilgan sana")),
                ('type', models.CharField(choices=[('lecture', 'Lecture'), ('laboratory', 'Laboratory'), ('practice', 'Practice')], max_length=255, verbose_name='Type')),
                ('hour', models.IntegerField(verbose_name='Hour')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_lesson_hours', to='syllabus.courselesson')),
            ],
            options={
                'verbose_name': 'Course lesson hour',
                'verbose_name_plural': 'Course lesson hours',
            },
        ),
        migrations.AddField(
            model_name='courselesson',
            name='course_syllabus',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_lessons', to='syllabus.coursesyllabus'),
        ),
        migrations.CreateModel(
            name='CourseLessonResourceFile',
            fields=[
            ],
            options={
                'verbose_name': 'Course lesson file',
                'verbose_name_plural': 'Course lesson files',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('syllabus.courselessonresource',),
        ),
        migrations.CreateModel(
            name='CourseLessonResourceUrl',
            fields=[
            ],
            options={
                'verbose_name': 'Course lesson url',
                'verbose_name_plural': 'Course lesson urls',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('syllabus.courselessonresource',),
        ),
        migrations.CreateModel(
            name='CourseLessonResourceVideo',
            fields=[
            ],
            options={
                'verbose_name': 'Course lesson video',
                'verbose_name_plural': 'Course lesson videos',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('syllabus.courselessonresource',),
        ),
        migrations.AddConstraint(
            model_name='testanswer',
            constraint=models.UniqueConstraint(condition=models.Q(is_correct=True), fields=('question', 'is_correct'), name='syllabus_testanswer_unique_correct_question_answer'),
        ),
        migrations.AlterUniqueTogether(
            name='coursesyllabustextsection',
            unique_together={('type', 'course_syllabus')},
        ),
        migrations.AlterUniqueTogether(
            name='coursesyllabusinformation',
            unique_together={('type', 'course_syllabus')},
        ),
    ]
