# Generated by Django 3.1.1 on 2021-05-28 22:02

import admin_panel.model.courses
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_resized.forms


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AboutMinistry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=500, null=True)),
                ('title_uz', models.CharField(blank=True, max_length=500, null=True)),
                ('title_en', models.CharField(blank=True, max_length=500, null=True)),
                ('title_ru', models.CharField(blank=True, max_length=500, null=True)),
                ('title_sr', models.CharField(blank=True, max_length=500, null=True)),
                ('content', models.TextField(null=True)),
                ('content_uz', models.TextField(null=True)),
                ('content_en', models.TextField(null=True)),
                ('content_ru', models.TextField(null=True)),
                ('content_sr', models.TextField(null=True)),
                ('image1', models.ImageField(upload_to='aboutministry/')),
                ('image2', models.ImageField(upload_to='aboutministry/')),
                ('image3', models.ImageField(upload_to='aboutministry/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'about_ministry',
            },
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, null=True)),
                ('title_uz', models.CharField(max_length=200, null=True)),
                ('title_en', models.CharField(max_length=200, null=True)),
                ('title_ru', models.CharField(max_length=200, null=True)),
                ('title_sr', models.CharField(max_length=200, null=True)),
                ('content', models.TextField()),
                ('content_uz', models.TextField(null=True)),
                ('content_en', models.TextField(null=True)),
                ('content_ru', models.TextField(null=True)),
                ('content_sr', models.TextField(null=True)),
                ('views', models.IntegerField(default=0)),
                ('is_published', models.BooleanField(default=False)),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'activity',
                'ordering': ['-publish_date'],
            },
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('title_uz', models.CharField(max_length=100, null=True)),
                ('title_en', models.CharField(max_length=100, null=True)),
                ('title_ru', models.CharField(max_length=100, null=True)),
                ('title_sr', models.CharField(max_length=100, null=True)),
                ('content', models.TextField()),
                ('content_uz', models.TextField(null=True)),
                ('content_en', models.TextField(null=True)),
                ('content_ru', models.TextField(null=True)),
                ('content_sr', models.TextField(null=True)),
                ('link', models.URLField()),
                ('link_uz', models.URLField(null=True)),
                ('link_en', models.URLField(null=True)),
                ('link_ru', models.URLField(null=True)),
                ('link_sr', models.URLField(null=True)),
            ],
            options={
                'db_table': 'announcement',
            },
        ),
        migrations.CreateModel(
            name='Articles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, null=True)),
                ('title_uz', models.CharField(max_length=200, null=True)),
                ('title_en', models.CharField(max_length=200, null=True)),
                ('title_ru', models.CharField(max_length=200, null=True)),
                ('title_sr', models.CharField(max_length=200, null=True)),
                ('author', models.CharField(max_length=200, null=True)),
                ('author_uz', models.CharField(max_length=200, null=True)),
                ('author_en', models.CharField(max_length=200, null=True)),
                ('author_ru', models.CharField(max_length=200, null=True)),
                ('author_sr', models.CharField(max_length=200, null=True)),
                ('content', models.TextField()),
                ('content_uz', models.TextField(null=True)),
                ('content_en', models.TextField(null=True)),
                ('content_ru', models.TextField(null=True)),
                ('content_sr', models.TextField(null=True)),
                ('views', models.IntegerField(default=0)),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Ilmiy maqola',
                'db_table': 'articles',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Conference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('title_uz', models.CharField(max_length=255, null=True)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_ru', models.CharField(max_length=255, null=True)),
                ('title_sr', models.CharField(max_length=255, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'conference',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='ConferenceSubject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('title_uz', models.CharField(max_length=255, null=True)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_ru', models.CharField(max_length=255, null=True)),
                ('title_sr', models.CharField(max_length=255, null=True)),
                ('department', models.CharField(max_length=255)),
                ('department_uz', models.CharField(max_length=255, null=True)),
                ('department_en', models.CharField(max_length=255, null=True)),
                ('department_ru', models.CharField(max_length=255, null=True)),
                ('department_sr', models.CharField(max_length=255, null=True)),
                ('file', models.FileField(upload_to='conference_file')),
                ('place', models.CharField(max_length=255)),
                ('place_uz', models.CharField(max_length=255, null=True)),
                ('place_en', models.CharField(max_length=255, null=True)),
                ('place_ru', models.CharField(max_length=255, null=True)),
                ('place_sr', models.CharField(max_length=255, null=True)),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('conference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='admin_panel.conference')),
            ],
            options={
                'db_table': 'conference_subject',
                'ordering': ['-start_date', 'id', 'conference__id'],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender_name', models.CharField(max_length=200)),
                ('phone_number', models.CharField(blank=True, max_length=30, null=True)),
                ('message', models.TextField()),
                ('status', models.IntegerField(choices=[(0, 'in process'), (1, 'reviewed'), (2, 'rejected')], default=0)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'contact',
                'ordering': ['-status'],
            },
        ),
        migrations.CreateModel(
            name='Council',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, null=True)),
                ('title_uz', models.CharField(max_length=200, null=True)),
                ('title_en', models.CharField(max_length=200, null=True)),
                ('title_ru', models.CharField(max_length=200, null=True)),
                ('title_sr', models.CharField(max_length=200, null=True)),
                ('image', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=81, size=[893, 497], upload_to='')),
                ('council', models.TextField()),
                ('council_uz', models.TextField(null=True)),
                ('council_en', models.TextField(null=True)),
                ('council_ru', models.TextField(null=True)),
                ('council_sr', models.TextField(null=True)),
                ('tasks', models.TextField()),
                ('tasks_uz', models.TextField(null=True)),
                ('tasks_en', models.TextField(null=True)),
                ('tasks_ru', models.TextField(null=True)),
                ('tasks_sr', models.TextField(null=True)),
                ('views', models.IntegerField(default=0)),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'universiter_kengashi',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CouncilStaff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=355)),
                ('title_uz', models.CharField(max_length=355, null=True)),
                ('title_en', models.CharField(max_length=355, null=True)),
                ('title_ru', models.CharField(max_length=355, null=True)),
                ('title_sr', models.CharField(max_length=355, null=True)),
                ('image', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=81, size=[75, 72], upload_to='staff')),
                ('shifr', models.CharField(max_length=20, null=True)),
                ('about', models.CharField(max_length=500, null=True)),
                ('about_uz', models.CharField(max_length=500, null=True)),
                ('about_en', models.CharField(max_length=500, null=True)),
                ('about_ru', models.CharField(max_length=500, null=True)),
                ('about_sr', models.CharField(max_length=500, null=True)),
                ('order', models.IntegerField(default=0)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'council_staff',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'countries',
                'ordering': ['-title'],
            },
        ),
        migrations.CreateModel(
            name='CourseCatalog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('title_uz', models.CharField(max_length=255, null=True)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_ru', models.CharField(max_length=255, null=True)),
                ('title_sr', models.CharField(max_length=255, null=True)),
                ('slug', models.SlugField(max_length=255)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'course_catalog',
            },
        ),
        migrations.CreateModel(
            name='Curricula',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, null=True)),
                ('title_uz', models.CharField(max_length=200, null=True)),
                ('title_en', models.CharField(max_length=200, null=True)),
                ('title_ru', models.CharField(max_length=200, null=True)),
                ('title_sr', models.CharField(max_length=200, null=True)),
                ('content', models.TextField()),
                ('content_uz', models.TextField(null=True)),
                ('content_en', models.TextField(null=True)),
                ('content_ru', models.TextField(null=True)),
                ('content_sr', models.TextField(null=True)),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'curricula',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('title_uz', models.CharField(max_length=255, null=True)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_ru', models.CharField(max_length=255, null=True)),
                ('title_sr', models.CharField(max_length=255, null=True)),
                ('image', models.FileField(upload_to='faculty-logo')),
                ('slug', models.SlugField(max_length=255)),
                ('main_page', models.BooleanField(default=False)),
                ('kafedras', models.TextField(blank=True, null=True, verbose_name='Tarkibidagi kafedralar')),
                ('kafedras_uz', models.TextField(blank=True, null=True, verbose_name='Tarkibidagi kafedralar')),
                ('kafedras_en', models.TextField(blank=True, null=True, verbose_name='Tarkibidagi kafedralar')),
                ('kafedras_ru', models.TextField(blank=True, null=True, verbose_name='Tarkibidagi kafedralar')),
                ('kafedras_sr', models.TextField(blank=True, null=True, verbose_name='Tarkibidagi kafedralar')),
                ('directions', models.TextField(blank=True, null=True, verbose_name='Ta’lim yo‘nalishlari')),
                ('directions_uz', models.TextField(blank=True, null=True, verbose_name='Ta’lim yo‘nalishlari')),
                ('directions_en', models.TextField(blank=True, null=True, verbose_name='Ta’lim yo‘nalishlari')),
                ('directions_ru', models.TextField(blank=True, null=True, verbose_name='Ta’lim yo‘nalishlari')),
                ('directions_sr', models.TextField(blank=True, null=True, verbose_name='Ta’lim yo‘nalishlari')),
                ('history', models.TextField(blank=True, null=True, verbose_name='Fakultet tarixi')),
                ('history_uz', models.TextField(blank=True, null=True, verbose_name='Fakultet tarixi')),
                ('history_en', models.TextField(blank=True, null=True, verbose_name='Fakultet tarixi')),
                ('history_ru', models.TextField(blank=True, null=True, verbose_name='Fakultet tarixi')),
                ('history_sr', models.TextField(blank=True, null=True, verbose_name='Fakultet tarixi')),
                ('study_works', models.TextField(blank=True, null=True, verbose_name='O‘quv-uslubiy ishlar')),
                ('study_works_uz', models.TextField(blank=True, null=True, verbose_name='O‘quv-uslubiy ishlar')),
                ('study_works_en', models.TextField(blank=True, null=True, verbose_name='O‘quv-uslubiy ishlar')),
                ('study_works_ru', models.TextField(blank=True, null=True, verbose_name='O‘quv-uslubiy ishlar')),
                ('study_works_sr', models.TextField(blank=True, null=True, verbose_name='O‘quv-uslubiy ishlar')),
                ('spiritual_directions', models.TextField(blank=True, null=True, verbose_name="Fakultet manaviy-marifiy va axloqiy tarbiya ishlari doirasida amalga oshiriladigan yo'nalishlar")),
                ('spiritual_directions_uz', models.TextField(blank=True, null=True, verbose_name="Fakultet manaviy-marifiy va axloqiy tarbiya ishlari doirasida amalga oshiriladigan yo'nalishlar")),
                ('spiritual_directions_en', models.TextField(blank=True, null=True, verbose_name="Fakultet manaviy-marifiy va axloqiy tarbiya ishlari doirasida amalga oshiriladigan yo'nalishlar")),
                ('spiritual_directions_ru', models.TextField(blank=True, null=True, verbose_name="Fakultet manaviy-marifiy va axloqiy tarbiya ishlari doirasida amalga oshiriladigan yo'nalishlar")),
                ('spiritual_directions_sr', models.TextField(blank=True, null=True, verbose_name="Fakultet manaviy-marifiy va axloqiy tarbiya ishlari doirasida amalga oshiriladigan yo'nalishlar")),
                ('research_works', models.TextField(blank=True, null=True, verbose_name='Ilmiy tadqiqot ishlar')),
                ('research_works_uz', models.TextField(blank=True, null=True, verbose_name='Ilmiy tadqiqot ishlar')),
                ('research_works_en', models.TextField(blank=True, null=True, verbose_name='Ilmiy tadqiqot ishlar')),
                ('research_works_ru', models.TextField(blank=True, null=True, verbose_name='Ilmiy tadqiqot ishlar')),
                ('research_works_sr', models.TextField(blank=True, null=True, verbose_name='Ilmiy tadqiqot ishlar')),
                ('innovative_works', models.TextField(blank=True, null=True, verbose_name='Innovatsion ishlar')),
                ('innovative_works_uz', models.TextField(blank=True, null=True, verbose_name='Innovatsion ishlar')),
                ('innovative_works_en', models.TextField(blank=True, null=True, verbose_name='Innovatsion ishlar')),
                ('innovative_works_ru', models.TextField(blank=True, null=True, verbose_name='Innovatsion ishlar')),
                ('innovative_works_sr', models.TextField(blank=True, null=True, verbose_name='Innovatsion ishlar')),
                ('faculty_innovative_works', models.TextField(blank=True, null=True, verbose_name='Fakultetda olib borilayotgan innovatsion ishlar')),
                ('faculty_innovative_works_uz', models.TextField(blank=True, null=True, verbose_name='Fakultetda olib borilayotgan innovatsion ishlar')),
                ('faculty_innovative_works_en', models.TextField(blank=True, null=True, verbose_name='Fakultetda olib borilayotgan innovatsion ishlar')),
                ('faculty_innovative_works_ru', models.TextField(blank=True, null=True, verbose_name='Fakultetda olib borilayotgan innovatsion ishlar')),
                ('faculty_innovative_works_sr', models.TextField(blank=True, null=True, verbose_name='Fakultetda olib borilayotgan innovatsion ishlar')),
                ('cooperation', models.TextField(blank=True, null=True, verbose_name='Akademik litsey va kasb-hunar kollejlari bilan hamkorlik')),
                ('cooperation_uz', models.TextField(blank=True, null=True, verbose_name='Akademik litsey va kasb-hunar kollejlari bilan hamkorlik')),
                ('cooperation_en', models.TextField(blank=True, null=True, verbose_name='Akademik litsey va kasb-hunar kollejlari bilan hamkorlik')),
                ('cooperation_ru', models.TextField(blank=True, null=True, verbose_name='Akademik litsey va kasb-hunar kollejlari bilan hamkorlik')),
                ('cooperation_sr', models.TextField(blank=True, null=True, verbose_name='Akademik litsey va kasb-hunar kollejlari bilan hamkorlik')),
                ('international_relations', models.TextField(blank=True, null=True, verbose_name='Xalqaro aloqalar')),
                ('international_relations_uz', models.TextField(blank=True, null=True, verbose_name='Xalqaro aloqalar')),
                ('international_relations_en', models.TextField(blank=True, null=True, verbose_name='Xalqaro aloqalar')),
                ('international_relations_ru', models.TextField(blank=True, null=True, verbose_name='Xalqaro aloqalar')),
                ('international_relations_sr', models.TextField(blank=True, null=True, verbose_name='Xalqaro aloqalar')),
                ('faculty_international_relations', models.TextField(blank=True, null=True, verbose_name='Fakultetning xalqaro aloqalari')),
                ('faculty_international_relations_uz', models.TextField(blank=True, null=True, verbose_name='Fakultetning xalqaro aloqalari')),
                ('faculty_international_relations_en', models.TextField(blank=True, null=True, verbose_name='Fakultetning xalqaro aloqalari')),
                ('faculty_international_relations_ru', models.TextField(blank=True, null=True, verbose_name='Fakultetning xalqaro aloqalari')),
                ('faculty_international_relations_sr', models.TextField(blank=True, null=True, verbose_name='Fakultetning xalqaro aloqalari')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'departments',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Direction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('title_uz', models.CharField(max_length=255, null=True)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_ru', models.CharField(max_length=255, null=True)),
                ('title_sr', models.CharField(max_length=255, null=True)),
                ('shifr', models.CharField(max_length=32)),
                ('study_year', models.PositiveSmallIntegerField(default=4)),
                ('languages', models.CharField(max_length=128)),
                ('qualification', models.CharField(max_length=128)),
                ('qualification_uz', models.CharField(max_length=128, null=True)),
                ('qualification_en', models.CharField(max_length=128, null=True)),
                ('qualification_ru', models.CharField(max_length=128, null=True)),
                ('qualification_sr', models.CharField(max_length=128, null=True)),
                ('credits', models.PositiveSmallIntegerField(default=240)),
                ('study_plan', models.FileField(upload_to='study_plan')),
                ('content', models.TextField()),
                ('content_uz', models.TextField(null=True)),
                ('content_en', models.TextField(null=True)),
                ('content_ru', models.TextField(null=True)),
                ('content_sr', models.TextField(null=True)),
                ('is_admission', models.BooleanField(default=True)),
                ('slug', models.SlugField(max_length=255)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='directions', to='admin_panel.coursecatalog')),
            ],
            options={
                'db_table': 'course_directions',
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='Docs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('law', models.CharField(max_length=500)),
                ('law_uz', models.CharField(max_length=500, null=True)),
                ('law_en', models.CharField(max_length=500, null=True)),
                ('law_ru', models.CharField(max_length=500, null=True)),
                ('law_sr', models.CharField(max_length=500, null=True)),
                ('title', models.CharField(max_length=500)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('file', models.FileField(upload_to='docs')),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('number', models.CharField(max_length=64)),
                ('number_uz', models.CharField(max_length=64, null=True)),
                ('number_en', models.CharField(max_length=64, null=True)),
                ('number_ru', models.CharField(max_length=64, null=True)),
                ('number_sr', models.CharField(max_length=64, null=True)),
                ('is_published', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'docs',
                'ordering': ['-date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Elibrary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, null=True)),
                ('title_uz', models.CharField(max_length=200, null=True)),
                ('title_en', models.CharField(max_length=200, null=True)),
                ('title_ru', models.CharField(max_length=200, null=True)),
                ('title_sr', models.CharField(max_length=200, null=True)),
                ('author', models.CharField(max_length=200, null=True)),
                ('author_uz', models.CharField(max_length=200, null=True)),
                ('author_en', models.CharField(max_length=200, null=True)),
                ('author_ru', models.CharField(max_length=200, null=True)),
                ('author_sr', models.CharField(max_length=200, null=True)),
                ('content', models.TextField()),
                ('content_uz', models.TextField(null=True)),
                ('content_en', models.TextField(null=True)),
                ('content_ru', models.TextField(null=True)),
                ('content_sr', models.TextField(null=True)),
                ('views', models.IntegerField(default=0)),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'elibrary',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EntrantPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('title_uz', models.CharField(max_length=255, null=True)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_ru', models.CharField(max_length=255, null=True)),
                ('title_sr', models.CharField(max_length=255, null=True)),
                ('slug', models.SlugField(max_length=255)),
                ('content', models.TextField()),
                ('content_uz', models.TextField(null=True)),
                ('content_en', models.TextField(null=True)),
                ('content_ru', models.TextField(null=True)),
                ('content_sr', models.TextField(null=True)),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('views', models.IntegerField(default=0)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'course_entrant_page',
                'ordering': ('-publish_date',),
            },
        ),
        migrations.CreateModel(
            name='EventsHashtag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('title_uz', models.CharField(max_length=255, null=True)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_ru', models.CharField(max_length=255, null=True)),
                ('title_sr', models.CharField(max_length=255, null=True)),
                ('slug', models.SlugField(max_length=255)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'events_hashtags',
                'ordering': ('-updated_at',),
            },
        ),
        migrations.CreateModel(
            name='ExternalImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='external')),
                ('url', models.URLField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'external_image',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='FamousGraduate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('profession', models.CharField(max_length=255)),
                ('profession_uz', models.CharField(max_length=255, null=True)),
                ('profession_en', models.CharField(max_length=255, null=True)),
                ('profession_ru', models.CharField(max_length=255, null=True)),
                ('profession_sr', models.CharField(max_length=255, null=True)),
                ('faculty', models.CharField(max_length=255)),
                ('faculty_uz', models.CharField(max_length=255, null=True)),
                ('faculty_en', models.CharField(max_length=255, null=True)),
                ('faculty_ru', models.CharField(max_length=255, null=True)),
                ('faculty_sr', models.CharField(max_length=255, null=True)),
                ('year', models.CharField(max_length=255)),
                ('year_uz', models.CharField(max_length=255, null=True)),
                ('year_en', models.CharField(max_length=255, null=True)),
                ('year_ru', models.CharField(max_length=255, null=True)),
                ('year_sr', models.CharField(max_length=255, null=True)),
                ('image', models.ImageField(upload_to='famousgraduates')),
                ('quote', models.TextField()),
                ('quote_uz', models.TextField(null=True)),
                ('quote_en', models.TextField(null=True)),
                ('quote_ru', models.TextField(null=True)),
                ('quote_sr', models.TextField(null=True)),
                ('bio', models.TextField()),
                ('bio_uz', models.TextField(null=True)),
                ('bio_en', models.TextField(null=True)),
                ('bio_ru', models.TextField(null=True)),
                ('bio_sr', models.TextField(null=True)),
                ('tasks', models.TextField()),
                ('tasks_uz', models.TextField(null=True)),
                ('tasks_en', models.TextField(null=True)),
                ('tasks_ru', models.TextField(null=True)),
                ('tasks_sr', models.TextField(null=True)),
                ('order', models.SmallIntegerField(default=1)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'famousgraduates',
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('author', models.TextField()),
                ('author_uz', models.TextField(null=True)),
                ('author_en', models.TextField(null=True)),
                ('author_ru', models.TextField(null=True)),
                ('author_sr', models.TextField(null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'faq',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=500, null=True)),
                ('title_uz', models.CharField(blank=True, max_length=500, null=True)),
                ('title_en', models.CharField(blank=True, max_length=500, null=True)),
                ('title_ru', models.CharField(blank=True, max_length=500, null=True)),
                ('title_sr', models.CharField(blank=True, max_length=500, null=True)),
                ('content', models.TextField(null=True)),
                ('content_uz', models.TextField(null=True)),
                ('content_en', models.TextField(null=True)),
                ('content_ru', models.TextField(null=True)),
                ('content_sr', models.TextField(null=True)),
                ('views', models.IntegerField(default=0)),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'goal',
            },
        ),
        migrations.CreateModel(
            name='Grant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('description', models.TextField()),
                ('description_uz', models.TextField(null=True)),
                ('description_en', models.TextField(null=True)),
                ('description_ru', models.TextField(null=True)),
                ('description_sr', models.TextField(null=True)),
                ('image', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=81, size=[1200, 675], upload_to='news')),
                ('views', models.IntegerField(default=0)),
                ('is_published', models.BooleanField(default=False)),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('slug', models.SlugField(blank=True, max_length=255)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('short_description', models.TextField()),
                ('short_description_uz', models.TextField(null=True)),
                ('short_description_en', models.TextField(null=True)),
                ('short_description_ru', models.TextField(null=True)),
                ('short_description_sr', models.TextField(null=True)),
            ],
            options={
                'db_table': 'grants',
                'ordering': ['-publish_date'],
            },
        ),
        migrations.CreateModel(
            name='GrantHashtag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('title_uz', models.CharField(max_length=255, null=True)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_ru', models.CharField(max_length=255, null=True)),
                ('title_sr', models.CharField(max_length=255, null=True)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'grant_hashtags',
            },
        ),
        migrations.CreateModel(
            name='InternationalRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('image', models.ImageField(upload_to='internationalrelations')),
                ('short_description', models.TextField()),
                ('short_description_uz', models.TextField(null=True)),
                ('short_description_en', models.TextField(null=True)),
                ('short_description_ru', models.TextField(null=True)),
                ('short_description_sr', models.TextField(null=True)),
                ('link', models.URLField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='InternationalStaff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('place', models.CharField(max_length=255)),
                ('place_uz', models.CharField(max_length=255, null=True)),
                ('place_en', models.CharField(max_length=255, null=True)),
                ('place_ru', models.CharField(max_length=255, null=True)),
                ('place_sr', models.CharField(max_length=255, null=True)),
                ('image', models.ImageField(upload_to='international-staff')),
                ('short_description', models.TextField()),
                ('short_description_uz', models.TextField(null=True)),
                ('short_description_en', models.TextField(null=True)),
                ('short_description_ru', models.TextField(null=True)),
                ('short_description_sr', models.TextField(null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='InternationalUsufulLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('link', models.URLField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Interview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, null=True)),
                ('title_uz', models.CharField(max_length=200, null=True)),
                ('title_en', models.CharField(max_length=200, null=True)),
                ('title_ru', models.CharField(max_length=200, null=True)),
                ('title_sr', models.CharField(max_length=200, null=True)),
                ('person', models.CharField(max_length=200, null=True)),
                ('person_uz', models.CharField(max_length=200, null=True)),
                ('person_en', models.CharField(max_length=200, null=True)),
                ('person_ru', models.CharField(max_length=200, null=True)),
                ('person_sr', models.CharField(max_length=200, null=True)),
                ('content', models.TextField(null=True)),
                ('content_uz', models.TextField(null=True)),
                ('content_en', models.TextField(null=True)),
                ('content_ru', models.TextField(null=True)),
                ('content_sr', models.TextField(null=True)),
                ('image', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=81, size=[380, 480], upload_to='')),
                ('video_link', models.URLField(blank=True, null=True)),
                ('views', models.IntegerField(default=0)),
                ('is_published', models.BooleanField(default=False)),
                ('main_page', models.BooleanField(default=False)),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'interview',
                'ordering': ['-publish_date'],
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, null=True)),
                ('title_uz', models.CharField(max_length=200, null=True)),
                ('title_en', models.CharField(max_length=200, null=True)),
                ('title_ru', models.CharField(max_length=200, null=True)),
                ('title_sr', models.CharField(max_length=200, null=True)),
                ('department', models.CharField(max_length=200)),
                ('department_uz', models.CharField(max_length=200, null=True)),
                ('department_en', models.CharField(max_length=200, null=True)),
                ('department_ru', models.CharField(max_length=200, null=True)),
                ('department_sr', models.CharField(max_length=200, null=True)),
                ('content', models.TextField()),
                ('content_uz', models.TextField(null=True)),
                ('content_en', models.TextField(null=True)),
                ('content_ru', models.TextField(null=True)),
                ('content_sr', models.TextField(null=True)),
                ('salary', models.BigIntegerField(default=0)),
                ('views', models.IntegerField(default=0)),
                ('is_published', models.BooleanField(default=False)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'job',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Kafedra',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('title_uz', models.CharField(max_length=200, null=True)),
                ('title_en', models.CharField(max_length=200, null=True)),
                ('title_ru', models.CharField(max_length=200, null=True)),
                ('title_sr', models.CharField(max_length=200, null=True)),
                ('slug', models.SlugField(max_length=200)),
                ('about', models.TextField()),
                ('about_uz', models.TextField(null=True)),
                ('about_en', models.TextField(null=True)),
                ('about_ru', models.TextField(null=True)),
                ('about_sr', models.TextField(null=True)),
                ('content', models.TextField()),
                ('content_uz', models.TextField(null=True)),
                ('content_en', models.TextField(null=True)),
                ('content_ru', models.TextField(null=True)),
                ('content_sr', models.TextField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('faculty', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='kafedralar', to='admin_panel.department')),
            ],
            options={
                'db_table': 'kafedra',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LawyerPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('file', models.FileField(upload_to='lawyer-page')),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('views', models.IntegerField(default=0)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'lawyer_page',
                'ordering': ['-date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Library',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, null=True)),
                ('title_uz', models.CharField(max_length=200, null=True)),
                ('title_en', models.CharField(max_length=200, null=True)),
                ('title_ru', models.CharField(max_length=200, null=True)),
                ('title_sr', models.CharField(max_length=200, null=True)),
                ('author', models.CharField(max_length=200, null=True)),
                ('author_uz', models.CharField(max_length=200, null=True)),
                ('author_en', models.CharField(max_length=200, null=True)),
                ('author_ru', models.CharField(max_length=200, null=True)),
                ('author_sr', models.CharField(max_length=200, null=True)),
                ('content', models.TextField()),
                ('content_uz', models.TextField(null=True)),
                ('content_en', models.TextField(null=True)),
                ('content_ru', models.TextField(null=True)),
                ('content_sr', models.TextField(null=True)),
                ('views', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'library',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LibraryCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, null=True)),
                ('title_uz', models.CharField(max_length=200, null=True)),
                ('title_en', models.CharField(max_length=200, null=True)),
                ('title_ru', models.CharField(max_length=200, null=True)),
                ('title_sr', models.CharField(max_length=200, null=True)),
                ('slug', models.SlugField(max_length=200, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'library_category',
            },
        ),
        migrations.CreateModel(
            name='MainPageSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.FileField(upload_to='agency_logo/')),
                ('logo_uz', models.FileField(null=True, upload_to='agency_logo/')),
                ('logo_en', models.FileField(null=True, upload_to='agency_logo/')),
                ('logo_ru', models.FileField(null=True, upload_to='agency_logo/')),
                ('logo_sr', models.FileField(null=True, upload_to='agency_logo/')),
                ('logo_white', models.FileField(upload_to='agency_logo/')),
                ('logo_white_uz', models.FileField(null=True, upload_to='agency_logo/')),
                ('logo_white_en', models.FileField(null=True, upload_to='agency_logo/')),
                ('logo_white_ru', models.FileField(null=True, upload_to='agency_logo/')),
                ('logo_white_sr', models.FileField(null=True, upload_to='agency_logo/')),
                ('instagram', models.URLField(blank=True, null=True)),
                ('telegram', models.URLField(blank=True, null=True)),
                ('facebook', models.URLField(blank=True, null=True)),
                ('twitter', models.URLField(blank=True, null=True)),
                ('youtube', models.URLField(blank=True, null=True)),
                ('title', models.CharField(max_length=255)),
                ('title_uz', models.CharField(max_length=255, null=True)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_ru', models.CharField(max_length=255, null=True)),
                ('title_sr', models.CharField(max_length=255, null=True)),
                ('address', models.TextField()),
                ('address_uz', models.TextField(null=True)),
                ('address_en', models.TextField(null=True)),
                ('address_ru', models.TextField(null=True)),
                ('address_sr', models.TextField(null=True)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(blank=True, max_length=128, null=True)),
                ('banner', models.FileField(null=True, upload_to='banner')),
                ('banner_uz', models.FileField(null=True, upload_to='banner')),
                ('banner_en', models.FileField(null=True, upload_to='banner')),
                ('banner_ru', models.FileField(null=True, upload_to='banner')),
                ('banner_sr', models.FileField(null=True, upload_to='banner')),
                ('banner_link', models.CharField(max_length=100, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('number1', models.CharField(blank=True, max_length=10, null=True)),
                ('number2', models.CharField(blank=True, max_length=10, null=True)),
                ('number3', models.CharField(blank=True, max_length=10, null=True)),
                ('number4', models.CharField(blank=True, max_length=10, null=True)),
                ('title1', models.CharField(blank=True, max_length=128, null=True)),
                ('title1_uz', models.CharField(blank=True, max_length=128, null=True)),
                ('title1_en', models.CharField(blank=True, max_length=128, null=True)),
                ('title1_ru', models.CharField(blank=True, max_length=128, null=True)),
                ('title1_sr', models.CharField(blank=True, max_length=128, null=True)),
                ('title2', models.CharField(blank=True, max_length=128, null=True)),
                ('title2_uz', models.CharField(blank=True, max_length=128, null=True)),
                ('title2_en', models.CharField(blank=True, max_length=128, null=True)),
                ('title2_ru', models.CharField(blank=True, max_length=128, null=True)),
                ('title2_sr', models.CharField(blank=True, max_length=128, null=True)),
                ('title3', models.CharField(blank=True, max_length=128, null=True)),
                ('title3_uz', models.CharField(blank=True, max_length=128, null=True)),
                ('title3_en', models.CharField(blank=True, max_length=128, null=True)),
                ('title3_ru', models.CharField(blank=True, max_length=128, null=True)),
                ('title3_sr', models.CharField(blank=True, max_length=128, null=True)),
                ('title4', models.CharField(blank=True, max_length=128, null=True)),
                ('title4_uz', models.CharField(blank=True, max_length=128, null=True)),
                ('title4_en', models.CharField(blank=True, max_length=128, null=True)),
                ('title4_ru', models.CharField(blank=True, max_length=128, null=True)),
                ('title4_sr', models.CharField(blank=True, max_length=128, null=True)),
                ('work_schedule_mon_fri', models.CharField(blank=True, max_length=50, null=True)),
                ('work_schedule_sun', models.CharField(blank=True, max_length=50, null=True)),
                ('work_schedule_lunch', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'main_page_settings',
            },
        ),
        migrations.CreateModel(
            name='MonoArticle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('title_uz', models.CharField(max_length=255, null=True)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_ru', models.CharField(max_length=255, null=True)),
                ('title_sr', models.CharField(max_length=255, null=True)),
                ('slug', models.SlugField(max_length=255)),
                ('is_published', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'mono_article',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Nationality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'nationality',
                'ordering': ['-title'],
            },
        ),
        migrations.CreateModel(
            name='NewsCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('slug', models.SlugField(max_length=200, null=True, unique=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'news_categories',
            },
        ),
        migrations.CreateModel(
            name='NewsHashtag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('title_uz', models.CharField(max_length=255, null=True)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_ru', models.CharField(max_length=255, null=True)),
                ('title_sr', models.CharField(max_length=255, null=True)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'news_hashtags',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='NightProgram',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, null=True)),
                ('title_uz', models.CharField(max_length=200, null=True)),
                ('title_en', models.CharField(max_length=200, null=True)),
                ('title_ru', models.CharField(max_length=200, null=True)),
                ('title_sr', models.CharField(max_length=200, null=True)),
                ('address', models.CharField(max_length=200, null=True)),
                ('address_uz', models.CharField(max_length=200, null=True)),
                ('address_en', models.CharField(max_length=200, null=True)),
                ('address_ru', models.CharField(max_length=200, null=True)),
                ('address_sr', models.CharField(max_length=200, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('fax', models.CharField(blank=True, max_length=32, null=True)),
                ('content', models.TextField()),
                ('content_uz', models.TextField(null=True)),
                ('content_en', models.TextField(null=True)),
                ('content_ru', models.TextField(null=True)),
                ('content_sr', models.TextField(null=True)),
                ('goals_tasks', models.TextField()),
                ('goals_tasks_uz', models.TextField(null=True)),
                ('goals_tasks_en', models.TextField(null=True)),
                ('goals_tasks_ru', models.TextField(null=True)),
                ('goals_tasks_sr', models.TextField(null=True)),
                ('tasks', models.TextField()),
                ('tasks_uz', models.TextField(null=True)),
                ('tasks_en', models.TextField(null=True)),
                ('tasks_ru', models.TextField(null=True)),
                ('tasks_sr', models.TextField(null=True)),
                ('bachelor', models.TextField()),
                ('bachelor_uz', models.TextField(null=True)),
                ('bachelor_en', models.TextField(null=True)),
                ('bachelor_ru', models.TextField(null=True)),
                ('bachelor_sr', models.TextField(null=True)),
                ('directions', models.TextField()),
                ('directions_uz', models.TextField(null=True)),
                ('directions_en', models.TextField(null=True)),
                ('directions_ru', models.TextField(null=True)),
                ('directions_sr', models.TextField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'night_program',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Opendata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('title_uz', models.CharField(max_length=200, null=True)),
                ('title_en', models.CharField(max_length=200, null=True)),
                ('title_ru', models.CharField(max_length=200, null=True)),
                ('title_sr', models.CharField(max_length=200, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'opendata',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('content', models.TextField(null=True)),
                ('content_uz', models.TextField(null=True)),
                ('content_en', models.TextField(null=True)),
                ('content_ru', models.TextField(null=True)),
                ('content_sr', models.TextField(null=True)),
                ('org_type', models.SmallIntegerField(choices=[(1, 'Markaz'), (2, "Bo'lim")])),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('reg_link', models.URLField(blank=True, null=True)),
                ('slug', models.SlugField(max_length=200)),
            ],
            options={
                'db_table': 'organizations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PhotoGallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('thumbnail', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=81, size=[300, 170], upload_to='photo_gallery_thumbnails')),
                ('is_published', models.BooleanField(default=False)),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'photo_gallery',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, null=True)),
                ('title_uz', models.CharField(max_length=200, null=True)),
                ('title_en', models.CharField(max_length=200, null=True)),
                ('title_ru', models.CharField(max_length=200, null=True)),
                ('title_sr', models.CharField(max_length=200, null=True)),
                ('content', models.TextField()),
                ('content_uz', models.TextField(null=True)),
                ('content_en', models.TextField(null=True)),
                ('content_ru', models.TextField(null=True)),
                ('content_sr', models.TextField(null=True)),
                ('image', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=81, size=[280, 160], upload_to='news')),
                ('views', models.IntegerField(default=0)),
                ('is_published', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=False)),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'project',
                'ordering': ['-publish_date'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('count', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'question',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Quizz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('is_published', models.BooleanField(default=False)),
                ('main_page', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'quizz',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RectorCongratulation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('title_uz', models.CharField(max_length=255, null=True)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_ru', models.CharField(max_length=255, null=True)),
                ('title_sr', models.CharField(max_length=255, null=True)),
                ('date', models.CharField(max_length=255)),
                ('image', models.FileField(upload_to='rector')),
                ('content', models.TextField()),
                ('content_uz', models.TextField(null=True)),
                ('content_en', models.TextField(null=True)),
                ('content_ru', models.TextField(null=True)),
                ('content_sr', models.TextField(null=True)),
                ('rector_fullname', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'rector_cong',
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('title_uz', models.CharField(max_length=255, null=True)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_ru', models.CharField(max_length=255, null=True)),
                ('title_sr', models.CharField(max_length=255, null=True)),
            ],
            options={
                'db_table': 'regions',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Rekvizit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Muassasa nomi')),
                ('title_uz', models.CharField(max_length=255, null=True, verbose_name='Muassasa nomi')),
                ('title_en', models.CharField(max_length=255, null=True, verbose_name='Muassasa nomi')),
                ('title_ru', models.CharField(max_length=255, null=True, verbose_name='Muassasa nomi')),
                ('title_sr', models.CharField(max_length=255, null=True, verbose_name='Muassasa nomi')),
                ('address', models.CharField(max_length=255, verbose_name='Manzil')),
                ('address_uz', models.CharField(max_length=255, null=True, verbose_name='Manzil')),
                ('address_en', models.CharField(max_length=255, null=True, verbose_name='Manzil')),
                ('address_ru', models.CharField(max_length=255, null=True, verbose_name='Manzil')),
                ('address_sr', models.CharField(max_length=255, null=True, verbose_name='Manzil')),
                ('phone', models.CharField(max_length=54, verbose_name='Telefon')),
                ('fax', models.CharField(max_length=54, verbose_name='Fax')),
                ('account_number', models.CharField(max_length=54, verbose_name='Hisob raqami')),
                ('bank', models.CharField(max_length=54, verbose_name='Bank')),
                ('mfo', models.CharField(max_length=54, verbose_name='MFO')),
                ('shxr', models.CharField(max_length=54, verbose_name='Shx/r')),
                ('inn', models.CharField(max_length=54, verbose_name='INN')),
                ('okonx', models.CharField(max_length=54, verbose_name='OKONX')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Rekvizit',
                'verbose_name_plural': 'Rekvizitlar',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('quarter', models.SmallIntegerField(choices=[(1, '1-chorak'), (2, '2-chorak'), (3, '3-chorak'), (4, '4-chorak')], default=1)),
                ('file', models.FileField(upload_to='reports')),
                ('is_published', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'reports',
                'ordering': ['-date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ScienceFiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('title_uz', models.CharField(max_length=255, null=True)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_ru', models.CharField(max_length=255, null=True)),
                ('title_sr', models.CharField(max_length=255, null=True)),
                ('file', models.FileField(upload_to='science-files')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'science-files',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ScienceNewsCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('slug', models.SlugField(max_length=200, null=True, unique=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'science_news_categories',
            },
        ),
        migrations.CreateModel(
            name='ScienceNewsHashtag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('title_uz', models.CharField(max_length=255, null=True)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_ru', models.CharField(max_length=255, null=True)),
                ('title_sr', models.CharField(max_length=255, null=True)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'science_news_hashtags',
            },
        ),
        migrations.CreateModel(
            name='SeminarCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('slug', models.SlugField(max_length=200, null=True, unique=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'seminar_categories',
            },
        ),
        migrations.CreateModel(
            name='SeminarHashtag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('title_uz', models.CharField(max_length=255, null=True)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_ru', models.CharField(max_length=255, null=True)),
                ('title_sr', models.CharField(max_length=255, null=True)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'seminar_hashtags',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500, null=True)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('icon', models.FileField(blank=True, null=True, upload_to='icon')),
                ('url', models.URLField(blank=True, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('content_uz', models.TextField(blank=True, null=True)),
                ('content_en', models.TextField(blank=True, null=True)),
                ('content_ru', models.TextField(blank=True, null=True)),
                ('content_sr', models.TextField(blank=True, null=True)),
                ('order', models.IntegerField(blank=True, null=True)),
                ('main_page', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'db_table': 'service',
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='Slider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('title_uz', models.CharField(max_length=255, null=True)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_ru', models.CharField(max_length=255, null=True)),
                ('title_sr', models.CharField(max_length=255, null=True)),
                ('short_description', models.CharField(max_length=500)),
                ('short_description_uz', models.CharField(max_length=500, null=True)),
                ('short_description_en', models.CharField(max_length=500, null=True)),
                ('short_description_ru', models.CharField(max_length=500, null=True)),
                ('short_description_sr', models.CharField(max_length=500, null=True)),
                ('image', models.FileField(upload_to='slider')),
                ('image_uz', models.FileField(null=True, upload_to='slider')),
                ('image_en', models.FileField(null=True, upload_to='slider')),
                ('image_ru', models.FileField(null=True, upload_to='slider')),
                ('image_sr', models.FileField(null=True, upload_to='slider')),
                ('order', models.SmallIntegerField(default=1)),
                ('link', models.URLField()),
            ],
            options={
                'db_table': 'slider',
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='StaticPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('url', models.CharField(max_length=500, null=True)),
                ('slug', models.SlugField(max_length=200, null=True, unique=True)),
                ('content', models.TextField()),
                ('content_uz', models.TextField(null=True)),
                ('content_en', models.TextField(null=True)),
                ('content_ru', models.TextField(null=True)),
                ('content_sr', models.TextField(null=True)),
                ('views', models.IntegerField(default=0)),
                ('active', models.BooleanField(default=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'static_pages',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Statistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('title_uz', models.CharField(max_length=255, null=True)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_ru', models.CharField(max_length=255, null=True)),
                ('title_sr', models.CharField(max_length=255, null=True)),
                ('icon', models.FileField(null=True, upload_to='statistic')),
                ('content', models.TextField()),
                ('content_uz', models.TextField(null=True)),
                ('content_en', models.TextField(null=True)),
                ('content_ru', models.TextField(null=True)),
                ('content_sr', models.TextField(null=True)),
                ('image', models.FileField(null=True, upload_to='statistic')),
                ('link', models.URLField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'statistic',
            },
        ),
        migrations.CreateModel(
            name='StatisticItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.SmallIntegerField(default=1)),
                ('title', models.CharField(max_length=255)),
                ('title_uz', models.CharField(max_length=255, null=True)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_ru', models.CharField(max_length=255, null=True)),
                ('title_sr', models.CharField(max_length=255, null=True)),
                ('number', models.IntegerField()),
                ('image', models.FileField(upload_to='statistic')),
            ],
            options={
                'db_table': 'statistic_item',
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='Structure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('content', models.TextField(null=True)),
                ('content_uz', models.TextField(null=True)),
                ('content_en', models.TextField(null=True)),
                ('content_ru', models.TextField(null=True)),
                ('content_sr', models.TextField(null=True)),
                ('views', models.IntegerField(default=0)),
                ('order', models.IntegerField(default=0)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'structure',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='StudyProgram',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, null=True)),
                ('title_uz', models.CharField(max_length=200, null=True)),
                ('title_en', models.CharField(max_length=200, null=True)),
                ('title_ru', models.CharField(max_length=200, null=True)),
                ('title_sr', models.CharField(max_length=200, null=True)),
                ('image', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=81, size=[893, 497], upload_to='')),
                ('description', models.TextField()),
                ('description_uz', models.TextField(null=True)),
                ('description_en', models.TextField(null=True)),
                ('description_ru', models.TextField(null=True)),
                ('description_sr', models.TextField(null=True)),
                ('bachelor', models.TextField()),
                ('bachelor_uz', models.TextField(null=True)),
                ('bachelor_en', models.TextField(null=True)),
                ('bachelor_ru', models.TextField(null=True)),
                ('bachelor_sr', models.TextField(null=True)),
                ('bachelor_documents', models.TextField()),
                ('bachelor_documents_uz', models.TextField(null=True)),
                ('bachelor_documents_en', models.TextField(null=True)),
                ('bachelor_documents_ru', models.TextField(null=True)),
                ('bachelor_documents_sr', models.TextField(null=True)),
                ('master', models.TextField()),
                ('master_uz', models.TextField(null=True)),
                ('master_en', models.TextField(null=True)),
                ('master_ru', models.TextField(null=True)),
                ('master_sr', models.TextField(null=True)),
                ('content', models.TextField()),
                ('content_uz', models.TextField(null=True)),
                ('content_en', models.TextField(null=True)),
                ('content_ru', models.TextField(null=True)),
                ('content_sr', models.TextField(null=True)),
                ('views', models.IntegerField(default=0)),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'study_programs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Thesis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, null=True)),
                ('title_uz', models.CharField(max_length=200, null=True)),
                ('title_en', models.CharField(max_length=200, null=True)),
                ('title_ru', models.CharField(max_length=200, null=True)),
                ('title_sr', models.CharField(max_length=200, null=True)),
                ('author', models.CharField(max_length=200, null=True)),
                ('author_uz', models.CharField(max_length=200, null=True)),
                ('author_en', models.CharField(max_length=200, null=True)),
                ('author_ru', models.CharField(max_length=200, null=True)),
                ('author_sr', models.CharField(max_length=200, null=True)),
                ('content', models.TextField()),
                ('content_uz', models.TextField(null=True)),
                ('content_en', models.TextField(null=True)),
                ('content_ru', models.TextField(null=True)),
                ('content_sr', models.TextField(null=True)),
                ('types', models.IntegerField(choices=[(1, 'Ilmiy maqola'), (2, 'tezis')], default=0)),
                ('views', models.IntegerField(default=0)),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'thesis',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Typo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('corrected', models.BooleanField(default=False)),
                ('page', models.CharField(max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'typos',
                'ordering': ['corrected'],
            },
        ),
        migrations.CreateModel(
            name='UsefulLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField()),
                ('title', models.CharField(max_length=255)),
                ('icon', models.FileField(upload_to='icon')),
                ('order', models.SmallIntegerField(default=1)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Hamkor',
                'verbose_name_plural': 'Hamkorlar',
                'db_table': 'useful_links',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='UserEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'user_email',
            },
        ),
        migrations.CreateModel(
            name='Vebinar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(max_length=255)),
                ('title', models.CharField(max_length=500)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('thumbnail', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=81, size=[300, 170], upload_to='video_gallery_thumbnails')),
                ('video_link', models.URLField()),
                ('is_published', models.BooleanField(default=False)),
                ('main_page', models.BooleanField(default=False)),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'vebinar',
                'ordering': ['-publish_date'],
            },
        ),
        migrations.CreateModel(
            name='VideoGallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('thumbnail', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=81, size=[300, 170], upload_to='video_gallery_thumbnails')),
                ('video_link', models.URLField()),
                ('is_published', models.BooleanField(default=False)),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'video_gallery',
                'ordering': ['-publish_date'],
            },
        ),
        migrations.CreateModel(
            name='ThesisFiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='thesis')),
                ('thesis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='admin_panel.thesis')),
            ],
            options={
                'db_table': 'thesis_files',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='StaticPageImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=81, size=[1200, 675], upload_to='static_gallery')),
                ('photo_gallery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='admin_panel.staticpage')),
            ],
            options={
                'db_table': 'static_page_images',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=355)),
                ('title_uz', models.CharField(max_length=355, null=True)),
                ('title_en', models.CharField(max_length=355, null=True)),
                ('title_ru', models.CharField(max_length=355, null=True)),
                ('title_sr', models.CharField(max_length=355, null=True)),
                ('order', models.IntegerField(default=0)),
                ('position', models.CharField(max_length=500, null=True)),
                ('position_uz', models.CharField(max_length=500, null=True)),
                ('position_en', models.CharField(max_length=500, null=True)),
                ('position_ru', models.CharField(max_length=500, null=True)),
                ('position_sr', models.CharField(max_length=500, null=True)),
                ('reception_days', models.CharField(max_length=255, null=True)),
                ('reception_days_uz', models.CharField(max_length=255, null=True)),
                ('reception_days_en', models.CharField(max_length=255, null=True)),
                ('reception_days_ru', models.CharField(max_length=255, null=True)),
                ('reception_days_sr', models.CharField(max_length=255, null=True)),
                ('duty', models.TextField()),
                ('duty_uz', models.TextField(null=True)),
                ('duty_en', models.TextField(null=True)),
                ('duty_ru', models.TextField(null=True)),
                ('duty_sr', models.TextField(null=True)),
                ('work_history', models.TextField()),
                ('work_history_uz', models.TextField(null=True)),
                ('work_history_en', models.TextField(null=True)),
                ('work_history_ru', models.TextField(null=True)),
                ('work_history_sr', models.TextField(null=True)),
                ('phone_number', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('fax', models.CharField(blank=True, max_length=32, null=True)),
                ('image', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=81, size=[800, 800], upload_to='staff')),
                ('main', models.BooleanField(default=False)),
                ('leader', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='staffs', to='admin_panel.department')),
                ('kafedra', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='staffs', to='admin_panel.kafedra')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='staffs', to='admin_panel.organization')),
            ],
            options={
                'db_table': 'staff',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Seminar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('description', models.TextField()),
                ('description_uz', models.TextField(null=True)),
                ('description_en', models.TextField(null=True)),
                ('description_ru', models.TextField(null=True)),
                ('description_sr', models.TextField(null=True)),
                ('thumbnail', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format=None, keep_meta=True, quality=81, size=[300, 170], upload_to='news')),
                ('image', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=81, size=[1200, 675], upload_to='news')),
                ('views', models.IntegerField(default=0)),
                ('is_published', models.BooleanField(default=False)),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('slug', models.SlugField(blank=True, max_length=255)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seminars', to='admin_panel.seminarcategory')),
                ('hashtag', models.ManyToManyField(blank=True, related_name='seminars', to='admin_panel.SeminarHashtag')),
            ],
            options={
                'db_table': 'seminars',
                'ordering': ('-publish_date',),
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section_number', models.PositiveSmallIntegerField(default=1)),
                ('title', models.CharField(max_length=255)),
                ('title_uz', models.CharField(max_length=255, null=True)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_ru', models.CharField(max_length=255, null=True)),
                ('title_sr', models.CharField(max_length=255, null=True)),
                ('author', models.CharField(max_length=255)),
                ('order', models.SmallIntegerField(default=1)),
                ('file', models.FileField(upload_to='section_file')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='admin_panel.monoarticle')),
            ],
            options={
                'db_table': 'mono_article_section',
                'ordering': ['section_number', 'order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='ScienceNews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('description', models.TextField()),
                ('description_uz', models.TextField(null=True)),
                ('description_en', models.TextField(null=True)),
                ('description_ru', models.TextField(null=True)),
                ('description_sr', models.TextField(null=True)),
                ('thumbnail', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format=None, keep_meta=True, quality=81, size=[300, 170], upload_to='news')),
                ('image', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=81, size=[1200, 675], upload_to='news')),
                ('views', models.IntegerField(default=0)),
                ('is_published', models.BooleanField(default=False)),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('slug', models.SlugField(blank=True, max_length=255)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='news', to='admin_panel.sciencenewscategory')),
                ('hashtag', models.ManyToManyField(blank=True, related_name='news', to='admin_panel.ScienceNewsHashtag')),
            ],
            options={
                'db_table': 'science_news',
                'ordering': ('-publish_date',),
            },
        ),
        migrations.CreateModel(
            name='RegionalDepartment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('address', models.TextField(null=True)),
                ('address_uz', models.TextField(null=True)),
                ('address_en', models.TextField(null=True)),
                ('address_ru', models.TextField(null=True)),
                ('address_sr', models.TextField(null=True)),
                ('address_url', models.URLField(null=True)),
                ('phone_number', models.CharField(max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('director', models.CharField(max_length=200)),
                ('director_uz', models.CharField(max_length=200, null=True)),
                ('director_en', models.CharField(max_length=200, null=True)),
                ('director_ru', models.CharField(max_length=200, null=True)),
                ('director_sr', models.CharField(max_length=200, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.region')),
            ],
            options={
                'db_table': 'regional_department',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='RatingSystem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=admin_panel.model.courses.gen_file_name)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('direction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rating_system', to='admin_panel.direction')),
            ],
            options={
                'db_table': 'rating_system',
            },
        ),
        migrations.CreateModel(
            name='QuestionResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='result', to='admin_panel.question')),
                ('quizz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='result', to='admin_panel.quizz')),
            ],
            options={
                'db_table': 'question_result',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='question',
            name='quizz',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='question', to='admin_panel.quizz'),
        ),
        migrations.CreateModel(
            name='PhotoGalleryImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=81, size=[1200, 675], upload_to='photo_gallery')),
                ('photo_gallery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='admin_panel.photogallery')),
            ],
            options={
                'db_table': 'photo_gallery_images',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='OpenDataFiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='opendata')),
                ('opendata', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='admin_panel.opendata')),
            ],
            options={
                'db_table': 'opendata_files',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('title_uz', models.CharField(max_length=500, null=True)),
                ('title_en', models.CharField(max_length=500, null=True)),
                ('title_ru', models.CharField(max_length=500, null=True)),
                ('title_sr', models.CharField(max_length=500, null=True)),
                ('description', models.TextField()),
                ('description_uz', models.TextField(null=True)),
                ('description_en', models.TextField(null=True)),
                ('description_ru', models.TextField(null=True)),
                ('description_sr', models.TextField(null=True)),
                ('thumbnail', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format=None, keep_meta=True, quality=81, size=[300, 170], upload_to='news')),
                ('image', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=81, size=[1200, 675], upload_to='news')),
                ('views', models.IntegerField(default=0)),
                ('is_published', models.BooleanField(default=False)),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('slug', models.SlugField(blank=True, max_length=255)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('short_description', models.TextField()),
                ('short_description_uz', models.TextField(null=True)),
                ('short_description_en', models.TextField(null=True)),
                ('short_description_ru', models.TextField(null=True)),
                ('short_description_sr', models.TextField(null=True)),
                ('main_page', models.BooleanField(default=False)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='news', to='admin_panel.newscategory')),
                ('hashtag', models.ManyToManyField(blank=True, related_name='news', to='admin_panel.NewsHashtag')),
            ],
            options={
                'db_table': 'news',
                'ordering': ['-publish_date'],
            },
        ),
        migrations.CreateModel(
            name='MonoFiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('title_uz', models.CharField(max_length=255, null=True)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_ru', models.CharField(max_length=255, null=True)),
                ('title_sr', models.CharField(max_length=255, null=True)),
                ('order', models.SmallIntegerField(default=1)),
                ('file', models.FileField(upload_to='section_file')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mono_files', to='admin_panel.monoarticle')),
            ],
            options={
                'db_table': 'mono_article_files',
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('title_uz', models.CharField(max_length=300, null=True)),
                ('title_en', models.CharField(max_length=300, null=True)),
                ('title_ru', models.CharField(max_length=300, null=True)),
                ('title_sr', models.CharField(max_length=300, null=True)),
                ('url', models.CharField(max_length=500, null=True)),
                ('order', models.IntegerField(blank=True, null=True)),
                ('is_static', models.BooleanField(blank=True, default=False)),
                ('footer', models.BooleanField(blank=True, default=False)),
                ('slug', models.SlugField(max_length=500, null=True, unique=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child', to='admin_panel.menu')),
            ],
            options={
                'db_table': 'menus',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='LibraryFiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='book')),
                ('library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='admin_panel.library')),
            ],
            options={
                'db_table': 'library_files',
                'ordering': ['-id'],
            },
        ),
        migrations.AddField(
            model_name='library',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_panel.librarycategory'),
        ),
        migrations.AddField(
            model_name='kafedra',
            name='mudir',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='kafedra_mudir', to='admin_panel.staff'),
        ),
        migrations.CreateModel(
            name='InternationalConferencePage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=81, size=[1200, 675], upload_to='international/conferences')),
                ('content', models.TextField()),
                ('content_uz', models.TextField(null=True)),
                ('content_en', models.TextField(null=True)),
                ('content_ru', models.TextField(null=True)),
                ('content_sr', models.TextField(null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('conferences', models.ManyToManyField(related_name='international', to='admin_panel.ConferenceSubject')),
            ],
            options={
                'db_table': 'international_conferencepage',
            },
        ),
        migrations.CreateModel(
            name='GrantFiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='grant-file')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('grant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='admin_panel.grant')),
            ],
            options={
                'db_table': 'grant_file',
                'ordering': ('created_at',),
            },
        ),
        migrations.AddField(
            model_name='grant',
            name='hashtag',
            field=models.ManyToManyField(blank=True, related_name='grants', to='admin_panel.GrantHashtag'),
        ),
        migrations.CreateModel(
            name='FamousGraduateGallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=81, size=[800, 800], upload_to='photo_gallery')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('famousgraduate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='admin_panel.famousgraduate')),
            ],
            options={
                'db_table': 'famous_graduate_gallery',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('title_uz', models.CharField(max_length=255, null=True)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_ru', models.CharField(max_length=255, null=True)),
                ('title_sr', models.CharField(max_length=255, null=True)),
                ('description', models.TextField()),
                ('description_uz', models.TextField(null=True)),
                ('description_en', models.TextField(null=True)),
                ('description_ru', models.TextField(null=True)),
                ('description_sr', models.TextField(null=True)),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('main_page', models.BooleanField(default=False)),
                ('views', models.IntegerField(default=0)),
                ('is_published', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('hashtag', models.ManyToManyField(blank=True, related_name='events', to='admin_panel.EventsHashtag')),
            ],
            options={
                'db_table': 'events',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='EntrantPageQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('title_uz', models.CharField(max_length=255, null=True)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_ru', models.CharField(max_length=255, null=True)),
                ('title_sr', models.CharField(max_length=255, null=True)),
                ('content', models.TextField()),
                ('content_uz', models.TextField(null=True)),
                ('content_en', models.TextField(null=True)),
                ('content_ru', models.TextField(null=True)),
                ('content_sr', models.TextField(null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('order', models.SmallIntegerField(default=1)),
                ('entrant_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='admin_panel.entrantpage')),
            ],
            options={
                'db_table': 'entrant_page_collapse',
                'ordering': ('order', '-created_at'),
            },
        ),
        migrations.CreateModel(
            name='EntrantPageFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('title_uz', models.CharField(max_length=255, null=True)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_ru', models.CharField(max_length=255, null=True)),
                ('title_sr', models.CharField(max_length=255, null=True)),
                ('file', models.FileField(upload_to='entrant-page-file')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('entrant_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='admin_panel.entrantpage')),
            ],
            options={
                'db_table': 'entrant_page_file',
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='ElibraryFiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='elibrary')),
                ('elibrary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='admin_panel.elibrary')),
            ],
            options={
                'db_table': 'elibrary_files',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('title_uz', models.CharField(max_length=255, null=True)),
                ('title_en', models.CharField(max_length=255, null=True)),
                ('title_ru', models.CharField(max_length=255, null=True)),
                ('title_sr', models.CharField(max_length=255, null=True)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.region')),
            ],
            options={
                'db_table': 'districts',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=128, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('image', models.FileField(blank=True, null=True, upload_to='user')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ArticlesFiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='articles')),
                ('articles', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='admin_panel.articles')),
            ],
            options={
                'db_table': 'articles_files',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Admission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('middle_name', models.CharField(max_length=255)),
                ('date_of_birth', models.DateField(max_length=255)),
                ('citizenship', models.CharField(max_length=255)),
                ('full_address', models.CharField(max_length=255)),
                ('passport', models.CharField(max_length=31)),
                ('gender', models.SmallIntegerField(choices=[(1, 'Male'), (2, 'Female')])),
                ('passport_given_data', models.DateField()),
                ('passport_issued_data', models.DateField()),
                ('passport_copy', models.FileField(upload_to='passports', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('photo', models.FileField(upload_to='photo3-4')),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=255)),
                ('extra_phone_number', models.CharField(blank=True, max_length=255, null=True)),
                ('full_name', models.CharField(max_length=255)),
                ('relation', models.CharField(max_length=255)),
                ('occupation', models.CharField(max_length=255)),
                ('country', models.CharField(max_length=255)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('rel_email', models.EmailField(max_length=254)),
                ('rel_phone_number', models.CharField(max_length=18)),
                ('education_name', models.CharField(max_length=500)),
                ('certificate', models.SmallIntegerField(choices=[(3, 'Secondary specialized and vocational College diploma'), (0, 'Others'), (2, 'Academic lyceum diploma'), (1, 'Certificate')])),
                ('graduation_year', models.DateField(null=True)),
                ('document_series_number', models.CharField(max_length=255)),
                ('diploma', models.FileField(blank=True, null=True, upload_to='diploma', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'gif', 'jpg', 'pdf', 'png', 'rar', 'tif', 'txt', 'xls', 'zip'])], verbose_name='Copy of the higher education document')),
                ('language_qualifications', models.CharField(max_length=255)),
                ('have_higher_education', models.BooleanField(default=False)),
                ('higher_education_name', models.CharField(blank=True, max_length=255, null=True)),
                ('national_olympiads', models.TextField(blank=True, null=True)),
                ('disability', models.TextField(blank=True, max_length=500, null=True)),
                ('need_dormitory', models.BooleanField(default=False)),
                ('status', models.BooleanField(default=False, editable=False)),
                ('errorr_fill', models.BooleanField(default=False, editable=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admission', to='admin_panel.direction')),
                ('degree', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admission', to='admin_panel.coursecatalog')),
                ('nationality', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_panel.nationality')),
                ('place_of_birth', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_panel.country')),
            ],
            options={
                'db_table': 'admission',
                'ordering': ('-created_at',),
            },
        ),
    ]
